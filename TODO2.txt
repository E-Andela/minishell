[X] SHLVL!
[X] (echo "hal) -> lelijke exit. verander alle "exit_program" naar "shell_exit". moeten we clear data nog doen? dan moet shell exit aangepast worden 
[ ] un-comment flags in libft makefile and minishell makefile and
[ ] remove unused variables 
		(ft_strlcat.c:20:17: error: variable ‘result’ set but not used [-Werror=unused-but-set-variable] 20 | size_t  result;)
		(ft_envp.c:205:25: error: variable ‘i’ set but not used [-Werror=unused-but-set-variable] 205 | int  i;)
		op mijn laptop runt blijkbaar een andere cc/gcc versie die dit wel opmerkt
[ ] fix errors bij TESTS!
[X] add 42 headers (liath)
[ ] 
[ ] 
[ ] 
[ ] debugging file verwijderen (ook uit makefile en header)
[ ] check of fsanitize en valgrind uit staan
[ ] run norminette one last lime!








TESTED AGAIN ON 15-01-2025

TESTS!	

DUBBEL CHECKEN MET IEMAND:
[ ] exit 
	# should return the last exit code value
[ ] exit -10
[ ] exit +10
[ ] sleep 5 | exit
[ ] exit 0 | exit 1
[ ] exit 1 | exit 0


FAILED:
[X] echo test > file test1
	bash: file met "test test1" erin
	minishell: file met "test file test1" erin
	# vars aren't sorted

[X] echo 2 >> out1 > out2
[X] echo 2 > out1 >> out2
[X] echo bonjour > $test		
[X] echo x > redirect1 | echo
		# hij gooit de file name(s) er ook in??

[X] > log echo coucou
[X] > a ls > b < Makefile
[X] echo > a Hello World!
[X] > a echo Hello World!
[X] cat < Makefile | grep gcc > output
[X] Documents/github/minishell_2
[X] "$USERS"	-> expand naar nothing, needs to give error '' command not found
[X] ""


FAILED, BUT DO WE NEED TO HANDLE THIS?:
[ ] echo bonjour > test\ 1
[ ] echo "\s" & echo "\s"
[ ] export var; export var=test
[ ] echo coucou | ;
[ ] echo "\"
[ ] echo "\\n \\n \\n"
[ ] echo ;;
[ ] echo hi";" hihi
[ ] echo hi " ; " hihi
[ ] echo |
[ ] echo sr*
[ ] echo ~
[ ] env puis export puis env 
[ ] cd ~



PASSED, BUT CAN BE BETTER
cd $HOME/Documents
	-bash: cd: /home/goliath/Documents: No such file or directory
	/home/goliath/Documents: No such file or directory
cat Makefile | grep pr | head -n 5 | cd test 
		(mybin) # check status code
	-bash: cd: test: No such file or directory
	test: No such file or directory (however, it does work with 'cat Makefile | grep pr | head -n 5 | cat test')
cat < test 
	# with non-existent test
cd no_file
	bash: cd: no_file: No such file or directory
	no_file: No such file or directory
cd a b c d
	bash: cd: too many arguments
	cd: too many arguments


PASSED:
echo bonjour | |
|
echo >	
echo -n -n -nnnn -nnnnm
cat /dev/random | head -n 1 | cat -e
unset var1 # with undefined var1
export ""
unset ""
$
not_cmd bonjour > salut
cat Makefile | grep pr | head -n 5 | cat test 
	(bin) # check status code
cat Makefile | grep pr | head -n 5 | hello
	(NA) # check status code
echo bonjour >>> test
echo bonjour > > out
echo bonjour > $test 
	# with test not defined
file_name_in_current_dir
cd ../../../../../.. ; pwd
coyotte > < " "
echo "bip | bip 
cat | cat | cat | ls 
	# check outputs order
$bla 
	# with bla not defined
export var ="cat Makefile | grep >"
export "test=ici"=coucou
c$var Makefile 
	# with var=at
$LESS$VAR
/bin/echo bonjour
not_cmd
"exit retour a la ligne"
minishell 
	# binary not in path without "./" before
cat diufosgid 
	# check exit code
echo $HOME
echo "$HOME"
echo '$HOME'
export ; env 
	# display is different for both commands
echo hudifg d | | hugdfihd
echo
echo simple
echo -n simple
echo ''
echo ""
echo "\n \n \n"
cd
cd .
cd /
pwd a
pwd a b c d
export LOL=lala ROR=rara
unset LOL ROR
export "HI= hi"
export "HI =hi"
/bin/ls
# write something the press ctrl+c
# write something then press ctrl+d
# write something then press ctrl+\
echo $?
l^Ds
| echo
sort | ls 
	# check output order
cat < >
cat < <
cat > >
echo "sr*"
echo abc
echo "xyz"
echo "xyz"'123'
echo a"x"y"z"a        ijk
echo '123'
echo xyz'123'xyz
echo 'x'$HOME'x'
echo 'x'~'x'
echo
echo '"/home/araiva"'
echo "'/home/araiva'"
echo 0
echo abc$HOME
echo abc$HOMEde
echo "abc$HOMEde"
echo 'abc$HOMEde'
echo abc0de
echo "abc0de"
echo 'abc0de'
echo "10""20""30"
echo "10"20"30"
echo '10''20''30'
echo '10'20'30'
echo 10"20"'30'
echo 10"20     "'30     '
echo 10 "20     "'30     '
echo 10    "20     "'30     '
echo 10    "20     " '30     '
echo 10    "20     "     '30     '
echo "$HOME" '$HOME'
cat redirect1
rm redirect1 | echo
echo fin
>>>
<<<
$USERS